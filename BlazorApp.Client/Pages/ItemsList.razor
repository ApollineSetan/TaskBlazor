@page "/"
@inject ItemService ItemService
@using BlazorApp.Client.Services
@using BlazorApp.Shared.Models
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager

<h3>Liste des tâches</h3>

@if (items == null)
{
    <p>Chargement...</p>
}
else if (!items.Any())
{
    <p>Aucune tâche trouvée.</p>
}
else
{
    <div class="row">
        @foreach (var item in items)
        {
            <div class="col-md-4 mb-4">
                <div class="card @(item.DueDate < DateTime.Today ? "bg-soft-red" : "")">
                    <div class="card-body">
                        <h5 class="card-title">@item.Name</h5>
                        <p class="card-text">@item.Description</p>
                        <p class="card-text">
                            <em>
                                A faire avant le @item.DueDate.ToString("dd/MM/yyyy")
                                @(item.DueDate < DateTime.Today ? " ⚠️" : "")
                            </em>
                        </p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-primary" @onclick="() => EditItem(item)">Modifier</button>
                            <button class="btn btn-danger" @onclick="() => DeleteItem(item.Id)">Supprimer</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Item>? items;

    protected override async Task OnInitializedAsync()
    {
        items = await ItemService.GetItemsAsync();
    }

    private async Task DeleteItem(int itemId)
    {
        await ItemService.DeleteItemAsync(itemId);
        items = await ItemService.GetItemsAsync();
    }

    private void EditItem(Item item)
    {
        NavigationManager.NavigateTo($"/edit-item/{item.Id}");
    }
}
